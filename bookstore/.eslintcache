[{"C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\App.js":"1","C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\Cart.js":"2","C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\index.js":"3","C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\BookItem.js":"4","C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\BooksList.js":"5"},{"size":608,"mtime":1607090729621,"results":"6","hashOfConfig":"7"},{"size":3236,"mtime":1607171154652,"results":"8","hashOfConfig":"7"},{"size":494,"mtime":1607090687648,"results":"9","hashOfConfig":"7"},{"size":2539,"mtime":1607093728449,"results":"10","hashOfConfig":"7"},{"size":1809,"mtime":1607268680606,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rqa73a",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\App.js",[],"C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\Cart.js",["23"],"C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\index.js",[],"C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\BookItem.js",[],"C:\\Users\\Valentin\\Desktop\\projets\\react-bookstore\\bookstore\\src\\BooksList.js",["24"],"import React, { useState, useEffect } from 'react'\r\nimport { useStore } from \"react-context-hook\"\r\nimport loader from './loader.webp'\r\nimport BookItem from './BookItem'\r\n\r\nfunction BooksList () {\r\n\r\n  const [books, setBooks] = useStore(\"books\", []);\r\n  const [displayedBooks, setDisplayedBooks] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  //API call\r\n  useEffect(() => {\r\n    //Get data and send it to the store\r\n    fetch(\"http://henri-potier.xebia.fr/books\")\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n          setDisplayedBooks(result) \r\n          setBooks(result)\r\n          setIsLoading(false)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        }\r\n    )\r\n  }, [])\r\n    \r\n  // Search function\r\n  const handleSearch = (evt) => { \r\n    const entry = evt.target.value.toLowerCase() // Input\r\n    const initialBooks = books\r\n    let filteredData = initialBooks.filter((book) => { // Search term inside Title an Synopsis\r\n      return book.title.toLowerCase().includes(entry) || book.synopsis.join(' ').toLowerCase().includes(entry)\r\n    })\r\n    setDisplayedBooks(filteredData) //set filtered data\r\n  }\r\n\r\n\r\n\r\n\r\n\tif(isLoading){\r\n\t\t// When data is not yet loaded\r\n\t\treturn <img className=\"spin-loader\" src={loader} alt=\"loader\" />\r\n\t}\r\n\telse{\r\n\t\t// When data is charged\r\n\treturn (\r\n        <div className=\"main\">\r\n            <div className=\"search-ctn\">\r\n                <input onChange={handleSearch} type=\"text\" placeholder=\"Recherchez un terme\"/>\r\n            </div>\r\n            <div className=\"books-ctn\">\r\n                {displayedBooks.map((book, index) => (\r\n                    <BookItem key={index} book={book} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n\t\t);\r\n\t}\r\n\t\t\t\r\n\t\t  \r\n}\r\n\r\n\r\nexport default BooksList;\r\n",{"ruleId":"25","severity":1,"message":"26","line":40,"column":8,"nodeType":"27","endLine":40,"endColumn":10,"suggestions":"28"},{"ruleId":"25","severity":1,"message":"29","line":26,"column":6,"nodeType":"27","endLine":26,"endColumn":8,"suggestions":"30"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'calculateOffer' and 'cart'. Either include them or remove the dependency array.","ArrayExpression",["31"],"React Hook useEffect has a missing dependency: 'setBooks'. Either include it or remove the dependency array.",["32"],{"desc":"33","fix":"34"},{"desc":"35","fix":"36"},"Update the dependencies array to be: [calculateOffer, cart]",{"range":"37","text":"38"},"Update the dependencies array to be: [setBooks]",{"range":"39","text":"40"},[1234,1236],"[calculateOffer, cart]",[737,739],"[setBooks]"]